Index: luv-1.7.4-5/src/udp.c
===================================================================
--- luv-1.7.4-5.orig/src/udp.c	2015-11-19 13:04:01.000000000 +0100
+++ luv-1.7.4-5/src/udp.c	2015-12-01 09:07:36.765323160 +0100
@@ -61,6 +61,9 @@
     lua_getfield(L, 4, "ipv6only");
     if (lua_toboolean(L, -1)) flags |= UV_UDP_IPV6ONLY;
     lua_pop(L, 1);
+    lua_getfield(L, 4, "pktinfo");
+    if (lua_toboolean(L, -1)) flags |= UV_UDP_PKTINFO;
+    lua_pop(L, 1);
   }
   ret = uv_udp_bind(handle, (struct sockaddr*)&addr, flags);
   if (ret < 0) return luv_error(L, ret);
@@ -198,7 +201,7 @@
   return 1;
 }
 
-static void luv_udp_recv_cb(uv_udp_t* handle, ssize_t nread, const uv_buf_t* buf, const struct sockaddr* addr, unsigned flags) {
+static void luv_udp_recv_cb(uv_udp_t* handle, ssize_t nread, const uv_buf_t* buf, const struct sockaddr* dest_addr, const struct sockaddr* src_addr, unsigned flags) {
   lua_State* L = luv_state(handle->loop);
 
   // err
@@ -211,7 +214,7 @@
 
   // data
   if (nread == 0) {
-    if (addr) {
+    if (src_addr) {
       lua_pushstring(L, "");
     }
     else {
@@ -224,8 +227,8 @@
   if (buf) free(buf->base);
 
   // address
-  if (addr) {
-    parse_sockaddr(L, (struct sockaddr_storage*)addr, sizeof *addr);
+  if (src_addr) {
+    parse_sockaddr(L, (struct sockaddr_storage*)src_addr, sizeof *src_addr);
   }
   else {
     lua_pushnil(L);
@@ -238,7 +241,15 @@
     lua_setfield(L, -2, "partial");
   }
 
-  luv_call_callback(L, handle->data, LUV_RECV, 4);
+  // address
+  if (dest_addr) {
+    parse_sockaddr(L, (struct sockaddr_storage*)dest_addr, sizeof *dest_addr);
+  }
+  else {
+    lua_pushnil(L);
+  }
+
+  luv_call_callback(L, handle->data, LUV_RECV, 5);
 }
 
 static int luv_udp_recv_start(lua_State* L) {
