Index: luv-1.0.0/src/luv.c
===================================================================
--- luv-1.0.0.orig/src/luv.c	2015-05-28 13:40:46.000000000 +0200
+++ luv-1.0.0/src/luv.c	2015-05-29 22:07:01.675888766 +0200
@@ -100,6 +100,7 @@
   // poll.c
   {"new_poll", luv_new_poll},
   {"poll_start", luv_poll_start},
+  {"poll_interrupt_start", luv_poll_interrupt_start},
   {"poll_stop", luv_poll_stop},
 
   // signal.c
Index: luv-1.0.0/src/poll.c
===================================================================
--- luv-1.0.0.orig/src/poll.c	2015-05-28 13:40:46.000000000 +0200
+++ luv-1.0.0/src/poll.c	2015-05-29 22:08:43.852771318 +0200
@@ -55,6 +55,8 @@
   switch (events) {
     case UV_READABLE: evtstr = "r"; break;
     case UV_WRITABLE: evtstr = "w"; break;
+    case UV_INTERRUPT: evtstr = "e"; break;
+    case UV_INTERRUPT|UV_READABLE: evtstr = "e"; break;
     case UV_READABLE|UV_WRITABLE: evtstr = "rw"; break;
     default: evtstr = ""; break;
   }
@@ -76,6 +78,15 @@
   if (ret < 0) return luv_error(L, ret);
   lua_pushinteger(L, ret);
   return 1;
+}
+
+static int luv_poll_interrupt_start(lua_State* L) {
+  uv_poll_t* handle = luv_check_poll(L, 1);
+  luv_check_callback(L, handle->data, LUV_POLL, 2);
+  int ret = uv_poll_start(handle, UV_INTERRUPT, luv_poll_cb);
+  if (ret < 0) return luv_error(L, ret);
+  lua_pushinteger(L, ret);
+  return 1;
 }
 
 static int luv_poll_stop(lua_State* L) {
